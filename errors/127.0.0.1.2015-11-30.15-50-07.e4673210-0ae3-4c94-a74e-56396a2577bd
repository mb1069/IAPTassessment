(dp1
S'output'
p2
S"<type 'exceptions.IndexError'> list index out of range"
p3
sS'layer'
p4
S'/usr/userfs/m/mb1069/Downloads/IAPTassessment/web2py/applications/IAPTassessment/controllers/boxes.py'
p5
sS'code'
p6
S'import helper\n\n\ndef boxview():\n    box_comics = db((db.comicbox.id == request.vars.boxid) & (db.comicbook.box_id == request.vars.boxid)).select(\n                                    db.comicbook.id, db.comicbox.id,\n                                    db.comicbox.name, db.comicbook.title,\n                                    db.comicbook.cover, db.comicbook.issue_number,\n                                    db.comicbook.publisher, db.comicbook.description)\n    record = db.comicbox(request.vars.boxid)\n    print record\n    form = SQLFORM(db.comicbox, record, deletable=True, submit_button="Update", delete_label="Check to delete")\n    form.vars.name = box_comics[0].comicbox.name\n\n    if form.process().accepted:\n        response.flash = \'form accepted\'\n\n    user_comics_id = []\n    for row in box_comics:\n        user_comics_id.append(row.comicbook.id)\n    artist_comics = db(\n        (db.artist.id == db.comicArtist.artist_id) & (db.comicArtist.comicbook_id.belongs(user_comics_id))).select(\n        db.comicArtist.comicbook_id, db.artist.name)\n    writer_comics = db(\n        (db.writer.id == db.comicWriter.writer_id) & (db.comicWriter.comicbook_id.belongs(user_comics_id))).select(\n        db.comicWriter.comicbook_id, db.writer.name)\n\n    return {\'boxdetails\': db(db.comicbox.id == request.vars.boxid).select()[0],\n            \'box_comics\': box_comics,\n            \'artist_comics\': artist_comics,\n            \'writer_comics\': writer_comics,\n            \'form\': form}\n\n\ndef myboxes():\n    user_boxes = db(auth.user_id == db.comicbox.user_id).select(\n        db.comicbox.id,\n        db.comicbox.name,\n        db.comicbox.created_on,\n        groupby=db.comicbox.name)\n\n    boxes = []\n    for box in user_boxes:\n        comics = db(db.comicbook.box_id == box.id).select(db.comicbook.title,\n                                                          db.comicbook.cover, db.comicbook.description,\n                                                          db.comicbook.issue_number, db.comicbook.publisher)\n        box.count = len(comics)\n        boxes.append((box, comics))\n    return {\'user_boxes\': boxes}\n\nresponse._vars=response._caller(boxview)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/usr/userfs/m/mb1069/Downloads/IAPTassessment/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/usr/userfs/m/mb1069/Downloads/IAPTassessment/web2py/applications/IAPTassessment/controllers/boxes.py", line 51, in <module>\n  File "/usr/userfs/m/mb1069/Downloads/IAPTassessment/web2py/gluon/globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "/usr/userfs/m/mb1069/Downloads/IAPTassessment/web2py/applications/IAPTassessment/controllers/boxes.py", line 28, in boxview\n    return {\'boxdetails\': db(db.comicbox.id == request.vars.boxid).select()[0],\n  File "/usr/userfs/m/mb1069/Downloads/IAPTassessment/web2py/gluon/packages/dal/pydal/objects.py", line 2507, in __getitem__\n    row = self.records[i]\nIndexError: list index out of range\n'
p11
s.